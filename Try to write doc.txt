
	Берём исходный текст.
	Сортируем по принципу: заглавные согласные, спецсимволы (пробел, абзац и т.д.), заглавные гласные, прописные согласные, цифры, прописные гласные.
	Переводим все знаки в шестнадцатеричный формат Юникод.
	Заменяем буквы A…F шестнадцатеричного формата Юникода на их числовые значения из таблицы Юникода.
	Удаляем из полученной последовательности все нули.
	Разбиваем всю последовательность на блоки по 16 цифр. Крайний блок, если он неполный, дополняем до 16 цифр любой цифрой от 2 до 9 (чтобы в дальнейшем можно было подсчитать хэш даже пустой строки).
1234 5678 1234 5678
	Симметрично увеличиваем каждый блок до 32 цифр 
	1234 5678 1234 5678 8765 4321 8765 4321
	Каждый из полученных блоков пересчитываем по формуле:
∑_(i=2)^32▒〖〖(N_i^(N_i+1)*N〗_(i-1)^(N_(i-1)+1))/mod33〗
	Создаём таблицу на 9999 строк, где каждой строке будет соответствовать слово длиной не менее 3 букв.
0000	апельсин
0001	телега
….	…
1256	опора
1257	велосипед
…	
9999	рожь

	Разбиваем, полученную в п.9 последовательность цифр на блоки по 4 цифры в каждом.
	Заменяем блоки из 4 цифр на слова из таблицы в п.10 пробелы между словами не ставим. Получаем непрерывную последовательность слов.
	Составляем таблицу слогов. Вертикальные и горизонтальные заголовки – прописные буквы русского и английского алфавита (32 + 26 = 58 в заголовках строк и столько же в заголовках столбцов). Ячейки таблицы – сочетание заглавных и прописных букв английского алфавита + 6 цифр. (26 + 26 + 6 = 58; 58*58=3364 ячейки)
	а	б	в	г	…
а	00	11			
б	0A	01	12		
в	1A	0B	02	13	
г		1B	0C	03	
д			1C	0D	
е	AA			1D	
ё		Nb			
…	…	…	…	…	…
о	0a				
п	1a	0b			
р		1b	0c		
с	K5		1c	0d	
…	…	…	…	..	…
	Переводим по слогам исходный текст в текст по таблице. Получаем непрерывную последовательность из цифр, заглавных и прописных букв английского алфавита.
	Следующий этап – сжатие. Для этого циклично удаляем каждый чётный символ в полученной последовательности до тех пор, пока её длина не войдёт в границы от 32 до 64 знаков. При длине больше 32 но меньше 64 знаков, добавляем знаки до 64. Эти недостающие берём из последнего цикла удаления знаков, выстраивая их в ряд и выбирая значения от первого до необходимого.

